services:
  # Zookeeper - 服务注册中心
  zookeeper:
    image: zookeeper:3.9
    container_name: quant-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/data
      - zookeeper-logs:/datalog
    networks:
      - backend-network
    restart: unless-stopped

  # Kafka - 消息队列
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: quant-kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - backend-network
    restart: unless-stopped

  # MySQL - 关系型数据库
  mysql:
    image: mysql:8.0
    container_name: quant-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root123456}
      - MYSQL_DATABASE=quant_trading
      - TZ=Asia/Shanghai
    volumes:
      - mysql-data:/var/lib/mysql
      - ./infrastructure/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - backend-network
    restart: unless-stopped

  # Redis - 缓存数据库
  redis:
    image: redis:7-alpine
    container_name: quant-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123456}
    volumes:
      - redis-data:/data
    networks:
      - backend-network
    restart: unless-stopped

  # Kafka UI - Kafka可视化管理工具 (可选)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: quant-kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - backend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  mysql-data:
  redis-data:
